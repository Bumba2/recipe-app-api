#docker-compose => tool that allows us to run our docker image easily from our docker
#location. It allows us to manage the different services that make up our project.

#version of docker-compose we are writing our file for:
version: "3"

#services that make up our application
services:
  #name of our service: We gonna have a service called app
  app:
    #and the build section of the configuration we gonna set a context
    build:
      #to . => which is our current directory.
      context: .
    #port configuration:
    ports:
      #we gonno map our project from port 8000 from our host to port 8000 from our image.
      - "8000:8000"
    #volume: a volume allows us to get the updates that we make in our project into our docker
    #image in real time (we dont need to restart docker after making changes).
    volumes:
      - ./app:/app
    #command: command that we use to run our app in our docker container
    #change it a bit adding wait for our db command: You call it using manage.py,
    #and then you use "&&" and continue to execute any command you want to run next.
    #we add the migrate command, which will run our database migrations on our
    #database so it will create any tables that are required for our app.
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=db #have to equal the name of the service that runs our database
      - DB_NAME=app #have to equal our POSTGRES_DB
      - DB_USER=postgres #have to equal our username POSTGRES_USER
      - DB_PASS=supersecretpassword #our POSTGRES_PASSWORD
    #We want our app service to depend on our db service:
    #=>means the db service will start before the app service
    #and the db service will be availbale via the network when you use the hostname db
    depends_on:
      - db


  db: #name of the service that runs our database
    image: postgres:10-alpine
    environment:
      - POSTGRES_DB=app
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=supersecretpassword